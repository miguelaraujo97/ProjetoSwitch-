@startuml
'https://plantuml.com/sequence-diagram

autonumber
actor "Director" as director
participant ":CreateProjectRoute(UI)" as route
participant "controllerProject1:CreateProjectController" as controller
participant "mapperTo:JsonToDTO" as mapperJson
participant "dtoProject1.1:dtoProject" as dtoProject1.1
participant "dtoProject1:DtoProject" as dtoProject1
participant "appServiceProject1:AppServiceProject" as service
participant "project1:Project" as project1
participant "repoProject1:IRepoProject" as repo
participant "mapperTo:DomainToData" as mapperDomain
participant "dataProject1:DataProject" as dataP
participant "dbDriver1:IDBDriver" as db
participant "project1Saved: Project" as project2
participant "savedProject1:DataProject" as dataProject


 director -> route :I want to create a project1
 activate route
director <-- route: request data(code, name, customer)
deactivate route
director -> route: insert data(code,name,customer)
activate route
route -> controller: createProject(json)
activate controller
controller -> controller:validate(json)
activate controller
deactivate controller
controller -> mapperJson: mapToDTOProject(json)
activate mapperJson
mapperJson --> dtoProject1**: create(json)
deactivate mapperJson
controller -> service : createProject(dtoProject1): dtoProject1.1
activate service
service --> project1**: createProject(dtoProject1):
service -> repo : save(project1):project1Saved
activate repo
repo -> mapperDomain : mapToData(project1)
activate mapperDomain
project1 <- mapperDomain : getAttributes(code,name,customer)
activate project1
deactivate project1
mapperDomain -> dataP**:create(code,name,customer)
repo -> db: save(dataProject1): savedProject1
activate db
db -> dataProject**: create(savedProject1)
deactivate db
repo -> mapperDomain: mapToModel(savedProject1)
mapperDomain --> project2 **
deactivate mapperDomain
deactivate repo
mapperJson <- service: mapToDto(project1Saved):dtoProject1.1
deactivate service
activate mapperJson
mapperJson -> project2: getAttributes():attr
activate project2
deactivate project2
mapperJson --> dtoProject1.1**: create(code,name.customer)
deactivate mapperJson
controller -> mapperJson: mapToJson(dtoProject1.1):(json)
activate mapperJson
deactivate mapperJson
controller -> controller: generateResponse(json)
route <-- controller : response
deactivate controller
director <-- route: response
deactivate route



@enduml