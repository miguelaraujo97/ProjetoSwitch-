@startuml



package UI{
    class ChangeUserAccountStatusUI
}

package "Core"{
    package "Controllers" {
    class ChangeUserAccountStatusController{
        +getUserAccountStatus(userId) : boolean
        +changeUserAccountStatus(userId, newStatus) : boolean
    }
    ChangeUserAccountStatusUI ..|> ChangeUserAccountStatusController

    }

    package "Domain"{
       class DataManagement{
           -TypologyStore : typologyStore
           -UserStore : userStore
           -ProfileStore : profileStore
           -RoleStore : roleStore
           -ProfileRequestStore : profileRequestStore
           -ProjectStore projectStore
           -ResourceStore resourceStore
           -CustomerStore customerStore
           +getUserStore() : userStore
       }
       class "UserStore" as UserStore{
           -userList : List<User>
           +getUserByUserId(userId) : userAccount
           #validateRequestedUserId(userId)) : boolean
       }
       class "User" as User{
             - profilesOfUser : List<Profile>
             - String : name
             - String : function
             - String : email
             - String : password
             - int : userID
             - boolean : isUserAccountActivated
        +changeUserAccountStatus(newStatus) : boolean
       }

    ChangeUserAccountStatusController ....|> "dataManagement\n" DataManagement
    ChangeUserAccountStatusController ....|> "userStore\l" UserStore
    DataManagement "1" - "1" UserStore
    UserStore "1  " *-- "1..*" User

skinparam nodesep 100
skinparam ranksep 10

    }
}


@enduml