@startuml
'https://plantuml.com/class-diagram

autonumber


actor "Project Manager" as pm
participant ":UI" as ui
participant ":CreateSprintController" as controller
participant ":CreateSprintService" as service
participant ":FindProjectService" as findProjService

participant "sprintRepo:SprintRepository" as sprintRepo

participant ":CreateSprintDomainService" as domainService
participant "project:Project" as project
participant "sprintFactory:SprintFactory" as spfFactory
participant "sprint:Sprint" as sprint


pm -> ui : I want to create a sprint
ui -> pm: request project code and sprint start date
pm -> ui: insert data (projectCode, startDate)

ui -> controller: createNewSprint(sprintCreationInfo)
controller -> service: createAndSaveSprint(sprintCreationInfo)
service -> findProjService: findProjectByCode(sprintCreationInfo.projectCode): project
service -> sprintRepo: listByProjectID(project.getProjectCode): sprintListByProjectID

service -> domainService: createSprint(sprintCreationInfo, project, sprintListByProjectID, sprintFactory)
domainService -> domainService: generateNextSprintID(sprintListByProjectID)

alt !sprintDatesOverlapWithOtherSprints
domainService -> project: createNewSprint(sprintID, sprintPlannedTimePeriod, sprintStatus, sprintFactory)
project -> project: validateSprintDatesWithProjectDates
project -> spfFactory: createSprint(sprintID, projectCode, sprintPlannedTimePeriod, sprintStatus)
spfFactory -> newSprint **: create
spfFactory -> project: newSprint
project -> domainService: Optional.of(newSprint)
domainService -> domainService: sortSprintOrdersUponSprintCreation(newSprint, sprintListByProjectID)
domainService -> service: Optional.of(newSprint)
else sprintDatesOverlapWithOtherSprints
domainService -> service: Optional.empty()
end
service -> controller: responseString
controller -> ui: ResponseEntity(responseString, HTTPstatus.created)
ui -> pm: Sprint created
@enduml