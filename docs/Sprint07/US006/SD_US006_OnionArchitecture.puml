@startuml
'https://plantuml.com/class-diagram

'TITLE ON TOP
title US006 - As Administrator, I want to update profiles assigned to a user account.

'HEADER FOOTER DESCRIPTIONS
center header ONION
center footer US006 - As Administrator, I want to update profiles assigned to a user account.

autoactivate on
autonumber

actor "Administrator" as user
participant ":UpdateUserProfile(UI)" as route
participant ":UpdateUserProfileController" as controller
participant "dtoAssembler:UserDomainDTOAssembler" as mapperJson
participant "userDTO1:UserDTO" as dtoUser1

participant ":UpdateUserProfileService" as service
participant "userSaved:User" as user1

participant ":UpdateProfileDomainService" as serviceProfile

participant "userRepo1:UserRepository" as repo

participant "profileRepo1:ProfileRepository" as repoProfile

participant "profile:Profile" as profile



user -> route :I want to update an user profile
user <-- route: request data(userId, profileId)
deactivate route
user -> route: insert data(userId, profileId)
route -> controller: UpdateUserProfile(updateProfileDTO)
controller -> controller:validate(updateProfileDTO)
deactivate controller
deactivate mapperJson
controller -> service : updateUserProfile(updateProfileDTO): userDTO1.1
service -> repoProfile : getProfileById(profileId) : profile
deactivate

service -> repo : getUserById(userId) : user
deactivate

service -> serviceProfile: updateProfile(user,profile): userUpdated
serviceProfile -> profile: getProfileId(): profileId
deactivate
serviceProfile -> user1: setProfile(profileId)
deactivate
deactivate
service -> mapperJson : mapToUserDTO(userUpdated):userDTO1.1
mapperJson -> user1 : getAttr():atr
mapperJson-> dtoUser1** : toDto(atr)
deactivate
deactivate mapperJson
deactivate user1
controller <-- service: userDTO1.1
deactivate service
route <-- controller : userDTO1.1
deactivate controller
user <-- route: ok
deactivate route


@enduml