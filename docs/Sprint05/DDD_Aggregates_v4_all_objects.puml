@startuml
'https://plantuml.com/class-diagram

hide members
hide circle
'skinparam linetype ortho

skinparam minClassWidth 100
'skinparam nodesep 60
'skinparam ranksep 60
'skinparam padding 0
skinparam roundCorner 8


skinparam package {
    backgroundColor white
    borderColor grey
    shadowing false
    fontStyle normal
    fontSize 16
    borderThickness 0.5
    fontColor #aaa
    stereotypeFontSize 10
    stereotypeFontColor lightGrey
}

skinparam class {
    stereotypeFontSize 10
    fontSize 16
    fontName Helvetica
    arrowColor black
    arrowThickness 1
    attributeIconSize 0
    borderThickness 0.5
}

skinparam class<<AGGREGATE ROOT>> {
    borderColor black
    backgroundColor #eee
}

skinparam class<<ENTITY>> {
    borderColor yellow
    backgroundColor #khaki
}

skinparam class<<VALUE OBJECT>> {
    borderColor green
    backgroundColor #technology
}


skinparam note {
    fontSize 14
    fontName Helvetica
    borderColor black
    borderThickness 0.5
    backgroundColor AliceBlue
}


'TITLE ON TOP
'title DDD diagram

'HEADER FOOTER DESCRIPTIONS
'center header DDD - Domain Driven Design
'center footer DDD - Domain Driven Design


package Project <<AGGREGATE>> {
    entity Project <<AGGREGATE ROOT>><<ENTITY>>
    class ProjectCode <<VALUE OBJECT>>
    class ProjectName <<VALUE OBJECT>>
    class Description <<VALUE OBJECT>>
    class Budget <<VALUE OBJECT>>
    class Customer <<VALUE OBJECT>>
    class DefaultSprintDuration <<VALUE OBJECT>>
    class ProjectStatus <<VALUE OBJECT>>
    class ProjectStatus <<VALUE OBJECT>>
    class "StartDate" as ProjectStartDate <<VALUE OBJECT>>
    class "EndDate" as ProjectEndDate <<VALUE OBJECT>>
    class BusinessSector <<VALUE OBJECT>>

    Project "1"--> "0..*" Sprint
    Project -right-> ProjectCode
    Project -right-> ProjectName
    Project -l-> Description
    Project -l-> Budget
    Project -down-> Customer
    Project -down-> DefaultSprintDuration
    Project -down-> ProjectStatus
    Project -down-> ProjectStartDate
    Project -down-> ProjectEndDate
    Project -down-> BusinessSector
    Project "1"-->"1" Typology
}

package Resource <<AGGREGATE>>  {
    entity Resource <<AGGREGATE ROOT>><<ENTITY>>
    class StartDate <<VALUE OBJECT>>
    class EndDate <<VALUE OBJECT>>
    class CostPerHour <<VALUE OBJECT>>
    class PercentageAllocation <<VALUE OBJECT>>
    class Role <<VALUE OBJECT>>

    Resource "1..*"-->"1" Project
    Resource "0..*"-->"1" User
    Resource -up-> StartDate
    Resource -up-> EndDate
    Resource -up- PercentageAllocation
    Resource -up- Role
    Resource -up-> CostPerHour
}

package Task <<AGGREGATE>>{
    entity Task <<AGGREGATE ROOT>><<ENTITY>>
    class TaskName <<VALUE OBJECT>>
    class "Description" as TaskDescription <<VALUE OBJECT>>
    class "StartDate"  as TaskStartDate<<VALUE OBJECT>>
    class "EndDate" as TaskEndDate <<VALUE OBJECT>>
    class TaskType <<VALUE OBJECT>>
    class TaskStatus <<VALUE OBJECT>>
    class HoursSpent <<VALUE OBJECT>>
    class "EffortEstimate" as EffortEstimateTask <<VALUE OBJECT>>
    class PercentageOfExecution <<VALUE OBJECT>>
    class UserResponsible <<VALUE OBJECT>>

    Task --> TaskDescription
    Task --> TaskEndDate
    Task --> TaskStartDate
    Task -up-> TaskStatus
    Task --> TaskType
    Task -up-> EffortEstimateTask
    Task -left-> PercentageOfExecution
    Task -up-> TaskName
    Task -up-> UserResponsible
    Task -right-> HoursSpent
}


package Sprint <<AGGREGATE>>{
    entity SprintBackLogItem <<VALUE OBJECT>>
    entity Sprint <<AGGREGATE ROOT>><<ENTITY>>
    class "StartDate" as SprintStartDate <<VALUE OBJECT>>
    class "EndDate" as SprintEndDate <<VALUE OBJECT>>
    class SprintOrder <<VALUE OBJECT>>
    class SprintDuration <<VALUE OBJECT>>
    class SprintStatus <<VALUE OBJECT>>

    Sprint  "1"<-- "0..*" Task
    Sprint "1"-- "1"SprintBackLogItem
    Sprint --> SprintStartDate
    Sprint --> SprintEndDate
    Sprint -u-> SprintOrder
    Sprint -u-> SprintDuration
    Sprint -u-> SprintStatus
    SprintBackLogItem "1..*"-->"1" UserStory
 }

package UserStory <<AGGREGATE>>{
    entity UserStory <<AGGREGATE ROOT>><<ENTITY>>
    class "Description" as UsDescription <<VALUE OBJECT>>
    class ParentUS <<VALUE OBJECT>>
    class UserStoryStatus <<VALUE OBJECT>>
    class Priority <<VALUE OBJECT>>
    class "EffortEstimate" as EffortEstimateUS <<VALUE OBJECT>>

    UserStory "1" <-- "0..*" Task
    UserStory --> UserStoryStatus
    UserStory -r-> ParentUS
    UserStory -l-> UsDescription
    UserStory --> Priority
    UserStory --> EffortEstimateUS
}

package User <<AGGREGATE>>{
    entity User <<AGGREGATE ROOT>><<ENTITY>>
    class UserID <<VALUE OBJECT>>
    class UserName <<VALUE OBJECT>>
    class Status <<VALUE OBJECT>>
    class Email <<VALUE OBJECT>>
    class Function <<VALUE OBJECT>>
    class Photo <<VALUE OBJECT>>

    User -- UserID
    User -- UserName
    User -- Status
    User -up- Email
    User -up- Function
    User -up- Photo
    User -up- "1" Profile
}


package Profile <<AGGREGATE>>{
    entity Profile <<AGGREGATE ROOT>><<ENTITY>>
    class ProfileName <<VALUE OBJECT>>
    class Permission <<VALUE OBJECT>>

    Profile "1"--> "1"ProfileName
    Profile "1"--> "1"Permission
}

package Typology <<AGGREGATE>>{
    entity Typology <<AGGREGATE ROOT>><<ENTITY>>
    class TypologyName <<VALUE OBJECT>>

    Typology -- "1"TypologyName
}

package ProfileRequest <<AGGREGATE>>{
    entity ProfileRequest <<AGGREGATE ROOT>><<ENTITY>>

    ProfileRequest"*" --> "1" User
    ProfileRequest"*" --> "1" Profile
}



@enduml